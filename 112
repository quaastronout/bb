def func11(arg58, arg59):
    def func12(arg60, arg61):
        var62 = (arg58 - arg60 ^ arg59) & arg61
        var63 = arg61 & arg59
        var64 = ((var63 - arg61) | arg59) ^ var62
        var65 = arg58 ^ var64
        var66 = arg59 + (arg58 + var62)
        var67 = (arg59 + (arg61 - arg58)) + var62
        if arg58 < arg58:
            var68 = var64 | var63
        else:
            var68 = arg61 | arg58
        var69 = (var62 + (var62 & var65)) + var64
        var70 = var69 & var62 & var69 ^ var66
        var71 = (var69 & arg60 - arg59) + 303
        var72 = var64 + var70 + var62 + var67
        var73 = arg60 - (var64 - var65 | var62)
        if var65 < var63:
            var74 = var70 + var63 & var65 | arg61
        else:
            var74 = arg58 & (arg60 + arg60)
        var75 = -1445419913 ^ (var69 & arg60) + var69
        var76 = var70 - arg58
        var77 = arg59 - var65
        var78 = 1486432885 + var71 ^ arg59
        var79 = var63 & var72
        var80 = var66 - var63
        var81 = 1362791598 | arg60 ^ var62 & var80
        var82 = var67 | 519
        result = (((var64 - ((var69 & var69) + var67 | var76) | var82 + (var71 + var62)) - var77) & var73) ^ arg58 ^ -1532839368
        return result
    var83 = func12(arg59, arg58)
    var84 = arg58 - arg59
    var85 = (94 - 490 ^ var84) ^ 861
    var86 = arg59 ^ var85
    var87 = var86 & var85 ^ -156 + -1364248612
    var88 = (var83 | arg59 ^ var84) | -106731497
    var89 = arg58 | arg58
    var90 = (var87 ^ var89 & var85) & var86
    var91 = arg58 + arg59 ^ 754 | var85
    var92 = ((arg59 ^ var90) | 610) & var87
    var93 = var84 ^ var91 ^ var86 ^ -1073101541
    var94 = ((arg59 - arg59) - var93) & var85
    result = (var88 ^ ((var94 | var90 - var92 ^ (var92 + var86 | var85)) ^ arg59) & var89 - arg58) - var93 & var94
    return result
def func10(arg32, arg33):
    if arg33 < arg32:
        var34 = ((55499357 + arg32) | arg32) ^ 544
    else:
        var34 = arg32 - (-901557064 + (-116 - 904496528))
    var35 = arg32 & 505754365
    var36 = var35 & 197 & 716260918
    var37 = var36 | -912007871
    var38 = (arg32 | var37 | arg32) ^ var37
    var39 = (arg32 & var37 ^ var36) + arg33
    var40 = (arg33 & var38) + var39
    var41 = 606692659 & arg32
    var42 = (520368314 | var36) ^ var36 | var39
    var43 = (-466 & var39 & arg33) + -661
    var44 = arg32 | ((var37 + var38) + -2026188729)
    var45 = var43 ^ arg33 & var42 & var40
    var46 = (var41 + 132) ^ var41
    var47 = (var42 ^ arg33 ^ var39) + var38
    var48 = var45 + var45
    var49 = var41 - var40
    var50 = var45 ^ var36
    var51 = (var36 + var35 & var46) | var42
    var52 = var49 ^ var38 ^ (var38 | 449711599)
    var53 = arg33 & arg32
    var54 = var41 & (var51 - var51)
    var55 = var40 & arg33
    var56 = var42 & var41
    var57 = var50 ^ (var38 & var35 & var55)
    result = var36 | (var50 - var35)
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var27 = func4(var6, arg1)
    var28 = func9()
    var29 = arg2 ^ var27
    var30 = (var28 + arg1 - var29) + arg1 ^ (1673826486 & var28 & (arg2 + ((var27 | -1015706833) & -2146303287 - arg2 + ((var27 - (-1997218919 | (var6 ^ arg2)) - 393) & 188) - -208 - var29)) | arg1) & arg2 ^ 1331924928
    var31 = (arg1 + (arg1 & var30)) + (var27 | 671)
    result = ((arg2 + (((var6 | (var29 - var29 ^ (var30 + var30))) | arg2) ^ var6 & arg2) - -1794227113) ^ 864065936) & var6
    return result
def func9():
    func7()
    result = len(xrange(20))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : -7
def func4(arg7, arg8):
    var9 = 0
    for var26 in func5(arg8, var9):
        var9 += arg8 ^ (arg7 - var26)
    return var9
def func6(arg12, arg13):
    var14 = arg12 + ((22492527 & -534809617 - 279 - -96 + 2107826636 | -1351488180) + (2064408109 ^ (arg13 | ((513 & (arg12 | -734 & ((arg13 + (arg13 ^ arg12 ^ arg12) | arg12 - arg12 + 246211094) ^ arg13))) ^ 171) - 123)))
    result = var14 + (((arg12 + arg13 & (arg13 & arg13 | arg12 & var14) - var14) - var14) ^ var14) & arg12 & var14
    return result
def func5(arg10, arg11):
    var15 = func6(354, arg11)
    yield var15
    var16 = -748 | arg10
    yield var16
    var17 = var16 + 408
    yield var17
    var18 = arg11 & ((var16 + var17) | arg11)
    yield var18
    var19 = (arg11 & 1230545784 & var17) + var16
    yield var19
    var20 = 442454589 + (var17 + var19)
    yield var20
    var21 = var18 | arg10
    yield var21
    var22 = var17 ^ 100016050 | var20 | var21
    yield var22
    var23 = arg11 + var20
    yield var23
    var24 = var17 & ((415 | arg11) + var16)
    yield var24
    var25 = var16 & -846970164
    yield var25
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = -7 - 5 + 0
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 11'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 95'
    for i in xrange(25000):
        x = 5
        x = func11(x, i)
        print x,
